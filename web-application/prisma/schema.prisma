// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id        String     @id @default(uuid()) @db.Uuid
    createdAt DateTime   @default(now())
    updatedAt DateTime   @updatedAt
    email     String     @unique
    firstName String
    lastName  String
    address   String
    password  String
    products  Product[]
    purchases Purchase[] @relation("BuyerPurchases")
    sales     Purchase[] @relation("SellerPurchases")
}

model Product {
    id            String    @id @default(uuid()) @db.Uuid
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt
    title         String
    categories    String[]
    description   String
    purchasePrice Decimal
    rentPrice     Decimal
    rentOption    String
    ownerId       String    @db.Uuid
    owner         User      @relation(fields: [ownerId], references: [id])
    isSold        Boolean   @default(false)
    purchaseId    String?   @db.Uuid
    purchase      Purchase?
}

model Purchase {
    id                               String   @id @default(uuid()) @db.Uuid
    createdAt                        DateTime @default(now())
    updatedAt                        DateTime @updatedAt
    sellerId                         String   @db.Uuid
    seller                           User     @relation("SellerPurchases", fields: [sellerId], references: [id])
    buyerId                          String   @db.Uuid
    buyer                            User     @relation("BuyerPurchases", fields: [buyerId], references: [id])
    productId                        String   @unique @db.Uuid
    product                          Product  @relation(fields: [productId], references: [id])
    purchasePriceAtTimeOfTransaction Decimal
    rentPriceAtTimeOfTransaction     Decimal
    rentOptionAtTimeOfTransaction    String
}
